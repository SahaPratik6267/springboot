## persisting the data - no need to enter the test data each time
#spring.datasource.url=jdbc:h2:file:./data/sample
#spring.datasource.driverClassName=org.h2.Driver
## user credentials for login in the web ui
#spring.datasource.username=sa
#spring.datasource.password=p
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
## update domain data, when model classes change
#spring.jpa.hibernate.ddl-auto=create

#Connection to postgres

spring.datasource.url=jdbc:postgresql://localhost:5433/sample
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=update

spring.jpa.open-in-view=false

# SQL statements are only printed in the DEBUG mode - setting it to INFO will keep your output clean of SQL statements
logging.level.org.hibernate.SQL=DEBUG
# pretty format your output, otherwise you can't read anything by all the numbers used
spring.jpa.properties.hibernate.format_sql=true
# you will see the values, which are used to execute queries, especially within the WHERE clause
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# same setting for transaction management (you will see the transaction context and involved connections to the db)
logging.level.org.hibernate.transaction=TRACE
logging.level.org.springframework.transaction=TRACE

# Session

server.servlet.session.timeout=15m

spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always
